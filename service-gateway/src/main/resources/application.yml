management:
  health:
    circuitbreakers:
      enabled: true
    ratelimiters:
      enabled: true
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: always

eureka:
  client:
    registerWithEureka: false
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://${discovery-server.hostname}:${discovery-server.port}/eureka/
  instance:
    appName: service-gateway
    preferIpAddress: true
    hostName: service-gateway

spring:
  application:
    name: service-gateway
  logstash:
    server: logstash
  security:
    oauth2:
      client:
        provider:
          keycloak:
            token-uri: http://${auth-server.hostname}:${auth-server.port}/auth/realms/service-gateway-realm/protocol/openid-connect/token
            issuer-uri: http://${auth-server.hostname}:${auth-server.port}/auth/realms/service-gateway-realm
            user-name-attribute: preferred_username
        registration:
          gateway-password-grant:
            provider: keycloak
            client-id: service-gateway-client
            client-secret: 4854dcd8-2f38-4d5d-b61f-3e426319468c
            authorization-grant-type: password
            scope: openid
  cloud:
    circuitbreaker:
      resilience4j:
        enabled: true
    gateway:
      default-filters:
        - TokenRelay
        - RemoveRequestHeader=Cookie
      routes:
        - id: auth-service
          uri: http://192.168.1.12:8080
          predicates:
            - Path=/auth123/**
          filters:
            - RewritePath=/auth/(?<segment>.*), /auth/realms/service-gateway-realm/protocol/openid-connect/$\{segment}
            - AddRequestHeader=Authorization, Basic c2VydmljZS1nYXRld2F5LWNsaWVudDo0ODU0ZGNkOC0yZjM4LTRkNWQtYjYxZi0zZTQyNjMxOTQ2OGM=
        - id: account-service
          uri: lb://account-service
          predicates:
            - Path=/account-service/**
          filters:
            - RemoveRequestHeader=Cookie
            - name: CircuitBreaker
              args:
                name: account-service
                fallbackUri: forward:/fallback/accountService

        - id: deposit-service
          uri: lb://deposit-service
          predicates:
            - Path=/deposit-service/**
          filters:
            - name: CircuitBreaker
              args:
                name: deposit-service
                fallbackUri: forward:/fallback/depositService

        - id: transfer-service
          uri: lb://transfer-service
          predicates:
            - Path=/transfer-service/**
          filters:
            - name: CircuitBreaker
              args:
                name: transfer-service
                fallbackUri: forward:/fallback/transferService

        - id: withdraw-service
          uri: lb://withdraw-service
          predicates:
            - Path=/withdraw-service/**
          filters:
            - name: CircuitBreaker
              args:
                name: withdraw-service
                fallbackUri: forward:/fallback/withdrawService

        - id: grafana-service
          uri: http://grafana:3000
          predicates:
            - Path=/transfer-service/**

  zipkin:
    base-url: http://${zipkin.host:localhost}:${zipkin.port:9411}/
  sleuth:
    sampler:
      probability: 100

default-client-registration-id: gateway-password-grant

resilience4j.circuitbreaker:
  configs:
    default:
      registerHealthIndicator: true
      slidingWindowSize: 10
      minimumNumberOfCalls: 10
      permittedNumberOfCallsInHalfOpenState: 5
      automaticTransitionFromOpenToHalfOpenEnabled: true
      waitDurationInOpenState: 2s
      failureRateThreshold: 10
      eventConsumerBufferSize: 20
      slowCallDurationThreshold: 200ms
      slowCallRateThreshold: 30
      recordExceptions:
        - org.springframework.web.client.HttpServerErrorException
        - java.io.IOException
      ignoreExceptions:
        - java.lang.IllegalStateException
    shared:
      registerHealthIndicator: true
      slidingWindowSize: 50
      permittedNumberOfCallsInHalfOpenState: 30
      waitDurationInOpenState: 10s
      failureRateThreshold: 50
      eventConsumerBufferSize: 20
      ignoreExceptions:
        - java.lang.IllegalStateException
  instances:
    account-service:
      baseConfig: default
    deposit-service:
      baseConfig: shared
    transfer-service:
      baseConfig: default
    withdraw-service:
      registerHealthIndicator: true
      slidingWindowSize: 10
      minimumNumberOfCalls: 10
      permittedNumberOfCallsInHalfOpenState: 10
      waitDurationInOpenState: 1s
      failureRateThreshold: 10
      eventConsumerBufferSize: 20

resilience4j.timelimiter:
  configs:
    default:
      timeoutDuration: 10s
      cancelRunningFuture: false
  instances:
    account-service:
      baseConfig: default
    deposit-service:
      baseConfig: default
    transfer-service:
      baseConfig: default
    withdraw-service:
      baseConfig: default


logging:
  level:
    root: DEBUG
    io:
      github:
        resilience4j: DEBUG
    org:
      springframework:
        cloud.gateway: DEBUG
        http.server.reactive: DEBUG
        web.reactive: DEBUG
